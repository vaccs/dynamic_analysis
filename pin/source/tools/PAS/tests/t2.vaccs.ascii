architecture~!~x86_64
invocation~!~tests/t2 
binary~!~tests/t2
ccode~!~#include <stdio.h>
ccode~!~#include <stdlib.h>
ccode~!~#include <sys/types.h>
ccode~!~#include <unistd.h>
ccode~!~struct tests {
ccode~!~   int a;
ccode~!~   int b;
ccode~!~   int *p;
ccode~!~};
ccode~!~int main() {
ccode~!~
ccode~!~   struct tests x;
ccode~!~
ccode~!~   x.a = 1;
ccode~!~   x.b = 2;
ccode~!~   x.p = &x.b;
ccode~!~   printf("a = %d, b = %d, *p = %d\n",x.a, x.b,*x.p);
ccode~!~}
section~!~|Type|Address|Size|Section Name
section~!~|5|0x555555554238|28|.interp
section~!~|5|0x555555554254|32|.note.ABI-tag
section~!~|5|0x555555554274|36|.note.gnu.build-id
section~!~|5|0x555555554298|28|.gnu.hash
section~!~|16|0x5555555542b8|192|.dynsym
section~!~|20|0x555555554378|159|.dynstr
section~!~|5|0x555555554418|16|.gnu.version
section~!~|5|0x555555554428|48|.gnu.version_r
section~!~|2|0x555555554458|192|.rela.dyn
section~!~|2|0x555555554518|48|.rela.plt
section~!~|4|0x555555554548|23|.init
section~!~|4|0x555555554560|48|.plt
section~!~|4|0x555555554590|8|.plt.got
section~!~|4|0x5555555545a0|498|.text
section~!~|4|0x555555554794|9|.fini
section~!~|5|0x5555555547a0|29|.rodata
section~!~|5|0x5555555547c0|60|.eh_frame_hdr
section~!~|5|0x555555554800|264|.eh_frame
section~!~|5|0x555555754db0|8|.init_array
section~!~|5|0x555555754db8|8|.fini_array
section~!~|6|0x555555754dc0|496|.dynamic
section~!~|8|0x555555754fb0|80|.got
section~!~|5|0x555555755000|16|.data
section~!~|18|0x555555755010|8|.bss
section~!~|17|0x0|43|.comment
section~!~|17|0x0|48|.debug_aranges
section~!~|17|0x0|935|.debug_info
section~!~|17|0x0|254|.debug_abbrev
section~!~|17|0x0|246|.debug_line
section~!~|17|0x0|733|.debug_str
section~!~|15|0x0|1656|.symtab
section~!~|19|0x0|545|.strtab
section~!~|21|0x0|318|.shstrtab
assembly~!~0|sub rsp, 0x8
assembly~!~0|mov rax, qword ptr [rip+0x200a95]
assembly~!~0|test rax, rax
assembly~!~0|jz 0x55555555455a
assembly~!~0|call rax
assembly~!~0|add rsp, 0x8
assembly~!~0|ret 
assembly~!~0|push qword ptr [rip+0x200a52]
assembly~!~0|jmp qword ptr [rip+0x200a54]
assembly~!~0|nop dword ptr [rax], eax
assembly~!~0|jmp qword ptr [rip+0x200a52]
assembly~!~0|push 0x0
assembly~!~0|jmp 0x555555554560
assembly~!~0|jmp qword ptr [rip+0x200a4a]
assembly~!~0|push 0x1
assembly~!~0|jmp 0x555555554560
assembly~!~0|jmp qword ptr [rip+0x200a62]
assembly~!~0|data16 nop 
assembly~!~0|xor ebp, ebp
assembly~!~0|mov r9, rdx
assembly~!~0|pop rsi
assembly~!~0|mov rdx, rsp
assembly~!~0|and rsp, 0xfffffffffffffff0
assembly~!~0|push rax
assembly~!~0|push rsp
assembly~!~0|lea r8, ptr [rip+0x1da]
assembly~!~0|lea rcx, ptr [rip+0x163]
assembly~!~0|lea rdi, ptr [rip+0xe6]
assembly~!~0|call qword ptr [rip+0x200a16]
assembly~!~0|hlt 
assembly~!~0|lea rdi, ptr [rip+0x200a39]
assembly~!~0|push rbp
assembly~!~0|lea rax, ptr [rip+0x200a31]
assembly~!~0|cmp rax, rdi
assembly~!~0|mov rbp, rsp
assembly~!~0|jz 0x555555554600
assembly~!~0|mov rax, qword ptr [rip+0x2009ea]
assembly~!~0|test rax, rax
assembly~!~0|jz 0x555555554600
assembly~!~0|pop rbp
assembly~!~0|jmp rax
assembly~!~0|nop word ptr [rax+rax*1], ax
assembly~!~0|pop rbp
assembly~!~0|ret 
assembly~!~0|nop dword ptr [rax], eax
assembly~!~0|nop word ptr [rax+rax*1], ax
assembly~!~0|lea rdi, ptr [rip+0x2009f9]
assembly~!~0|lea rsi, ptr [rip+0x2009f2]
assembly~!~0|push rbp
assembly~!~0|sub rsi, rdi
assembly~!~0|mov rbp, rsp
assembly~!~0|sar rsi, 0x3
assembly~!~0|mov rax, rsi
assembly~!~0|shr rax, 0x3f
assembly~!~0|add rsi, rax
assembly~!~0|sar rsi, 0x1
assembly~!~0|jz 0x555555554650
assembly~!~0|mov rax, qword ptr [rip+0x2009b1]
assembly~!~0|test rax, rax
assembly~!~0|jz 0x555555554650
assembly~!~0|pop rbp
assembly~!~0|jmp rax
assembly~!~0|nop word ptr [rax+rax*1], ax
assembly~!~0|pop rbp
assembly~!~0|ret 
assembly~!~0|nop dword ptr [rax], eax
assembly~!~0|nop word ptr [rax+rax*1], ax
assembly~!~0|cmp byte ptr [rip+0x2009a9], 0x0
assembly~!~0|jnz 0x555555554698
assembly~!~0|cmp qword ptr [rip+0x200987], 0x0
assembly~!~0|push rbp
assembly~!~0|mov rbp, rsp
assembly~!~0|jz 0x555555554683
assembly~!~0|mov rdi, qword ptr [rip+0x20098a]
assembly~!~0|call 0x555555554590
assembly~!~0|call 0x5555555545d0
assembly~!~0|mov byte ptr [rip+0x200981], 0x1
assembly~!~0|pop rbp
assembly~!~0|ret 
assembly~!~0|nop dword ptr [rax], eax
assembly~!~0|ret 
assembly~!~0|push rbp
assembly~!~0|mov rbp, rsp
assembly~!~0|pop rbp
assembly~!~0|jmp 0x555555554610
assembly~!~10|push rbp
assembly~!~10|mov rbp, rsp
assembly~!~10|sub rsp, 0x20
assembly~!~10|mov rax, qword ptr fs:[0x28]
assembly~!~10|mov qword ptr [rbp-0x8], rax
assembly~!~10|xor eax, eax
assembly~!~14|mov dword ptr [rbp-0x20], 0x1
assembly~!~15|mov dword ptr [rbp-0x1c], 0x2
assembly~!~16|lea rax, ptr [rbp-0x20]
assembly~!~16|add rax, 0x4
assembly~!~16|mov qword ptr [rbp-0x18], rax
assembly~!~17|mov rax, qword ptr [rbp-0x18]
assembly~!~17|mov ecx, dword ptr [rax]
assembly~!~17|mov edx, dword ptr [rbp-0x1c]
assembly~!~17|mov eax, dword ptr [rbp-0x20]
assembly~!~17|mov esi, eax
assembly~!~17|lea rdi, ptr [rip+0xb4]
assembly~!~17|mov eax, 0x0
assembly~!~17|call 0x555555554580
assembly~!~17|mov eax, 0x0
assembly~!~18|mov rsi, qword ptr [rbp-0x8]
assembly~!~18|xor rsi, qword ptr fs:[0x28]
assembly~!~18|jz 0x555555554713
assembly~!~18|call 0x555555554570
assembly~!~18|leave 
assembly~!~18|ret 
assembly~!~0|push r15
assembly~!~0|push r14
assembly~!~0|mov r15, rdx
assembly~!~0|push r13
assembly~!~0|push r12
assembly~!~0|lea r12, ptr [rip+0x20067e]
assembly~!~0|push rbp
assembly~!~0|lea rbp, ptr [rip+0x20067e]
assembly~!~0|push rbx
assembly~!~0|mov r13d, edi
assembly~!~0|mov r14, rsi
assembly~!~0|sub rbp, r12
assembly~!~0|sub rsp, 0x8
assembly~!~0|sar rbp, 0x3
assembly~!~0|call 0x555555554548
assembly~!~0|test rbp, rbp
assembly~!~0|jz 0x555555554776
assembly~!~0|xor ebx, ebx
assembly~!~0|nop dword ptr [rax+rax*1], eax
assembly~!~0|mov rdx, r15
assembly~!~0|mov rsi, r14
assembly~!~0|mov edi, r13d
assembly~!~0|call qword ptr [r12+rbx*8]
assembly~!~0|add rbx, 0x1
assembly~!~0|cmp rbp, rbx
assembly~!~0|jnz 0x555555554760
assembly~!~0|add rsp, 0x8
assembly~!~0|pop rbx
assembly~!~0|pop rbp
assembly~!~0|pop r12
assembly~!~0|pop r13
assembly~!~0|pop r14
assembly~!~0|pop r15
assembly~!~0|ret 
assembly~!~0|ret 
assembly~!~0|sub rsp, 0x8
assembly~!~0|add rsp, 0x8
assembly~!~0|ret 
function_invocation~!~19|0|`_start|0x7fffffffd9e0
return_address~!~_start|0|1
register~!~20|null|ebp|0
register~!~21|null|rflags|582
register~!~22|null|r9|140737351932320
register~!~24|null|rsi|1
register~!~25|null|rsp|140737488345576
register~!~26|null|rdx|140737488345576
register~!~27|null|rsp|140737488345568
register~!~28|null|rflags|514
register~!~30|null|rsp|140737488345560
register~!~32|null|rsp|140737488345552
register~!~33|null|r8|93824992233360
register~!~34|null|rcx|93824992233248
register~!~35|null|rdi|93824992233130
register~!~36|null|rip|140737021893296
register~!~37|null|rsp|140737488345544
function_invocation~!~39|0|`__libc_csu_init|0x7fffffffd908
return_address~!~__libc_csu_init|93824992233248|140737021893416
register~!~41|null|rsp|140737488345344
register~!~43|null|rsp|140737488345336
register~!~44|null|r15|140737488345592
register~!~46|null|rsp|140737488345328
register~!~48|null|rsp|140737488345320
register~!~49|null|r12|93824994332080
register~!~51|null|rsp|140737488345312
register~!~52|null|rbp|93824994332088
register~!~54|null|rsp|140737488345304
register~!~55|null|r13d|1
register~!~56|null|r14|140737488345576
register~!~57|null|rbp|8
register~!~58|null|rsp|140737488345296
register~!~59|null|rbp|1
register~!~60|null|rip|93824992232776
register~!~61|null|rsp|140737488345288
function_invocation~!~63|0|`_init|0x7fffffffd8c8
return_address~!~_init|1|93824992233297
register~!~64|null|rsp|140737488345280
register~!~65|null|rflags|518
register~!~66|null|rax|0
register~!~67|null|rflags|582
register~!~68|null|rsp|140737488345288
register~!~69|null|rflags|514
return~!~70
register~!~72|null|rip|93824992233297
register~!~73|null|rsp|140737488345296
register~!~74|null|rip|93824992233302
register~!~75|null|ebx|0
register~!~76|null|rflags|582
register~!~77|null|rdx|140737488345592
register~!~78|null|rsi|140737488345576
register~!~79|null|edi|1
register~!~80|null|rip|93824992233120
register~!~81|null|rsp|140737488345288
register~!~83|null|rsp|140737488345280
register~!~84|null|rbp|140737488345280
register~!~86|null|rbp|1
register~!~87|null|rsp|140737488345288
register~!~88|null|rip|93824992232976
function_invocation~!~90|0|`register_tm_clones|0x7fffffffd8c8
return_address~!~register_tm_clones|1|93824992233325
register~!~91|null|rdi|93824994332688
register~!~92|null|rsi|93824994332688
register~!~94|null|rsp|140737488345280
register~!~95|null|rsi|0
register~!~96|null|rbp|140737488345280
register~!~98|null|rbp|1
register~!~99|null|rsp|140737488345288
return~!~100
register~!~102|null|rip|93824992233325
register~!~103|null|rsp|140737488345296
register~!~104|null|rbx|1
register~!~105|null|rflags|514
register~!~106|null|rflags|582
register~!~107|null|rip|93824992233334
register~!~108|null|rsp|140737488345304
register~!~109|null|rflags|518
register~!~111|null|rbx|0
register~!~112|null|rsp|140737488345312
register~!~114|null|rbp|93824992233248
register~!~115|null|rsp|140737488345320
register~!~117|null|r12|93824992232864
register~!~118|null|rsp|140737488345328
register~!~120|null|r13|140737488345568
register~!~121|null|rsp|140737488345336
register~!~123|null|r14|0
register~!~124|null|rsp|140737488345344
register~!~126|null|r15|0
register~!~127|null|rsp|140737488345352
return~!~128
register~!~130|null|rip|140737021893416
register~!~131|null|rsp|140737488345360
function_invocation~!~133|0|test2.c`main|0x7fffffffd908
return_address~!~main|93824992233248|140737021893527
register~!~135|int main() {|rsp|140737488345344
register~!~136|int main() {|rbp|140737488345344
variable_access~!~137|10|main|0x7fffffffd8e0|struct tests|x|<multielement>
variable_access~!~137|10|main|0x7fffffffd8e0|int|struct tests:a|1431652128
variable_access~!~137|10|main|0x7fffffffd8e4|int|struct tests:b|21845
variable_access~!~137|10|main|0x7fffffffd8e8|int*|struct tests:p|0x4d492032742f7374|0x5555555545a0
variable_access~!~137|10|main|0x7fffffffd8e8|int*|struct tests:p|0x5555555545a0|-1991643855
register~!~138|int main() {|rsp|140737488345312
register~!~139|int main() {|rflags|514
register~!~140|int main() {|rax|-451893060444788480
variable_access~!~141|10|main|0x7fffffffd8e8|int*|struct tests:p|0x5555555545a0|-1991643855
register~!~142|int main() {|eax|0
register~!~143|int main() {|rflags|582
variable_access~!~144|14|main|0x7fffffffd8e0|int|struct tests:a|1
variable_access~!~144|14|main|0x7fffffffd8e8|int*|struct tests:p|0x5555555545a0|-1991643855
variable_access~!~145|15|main|0x7fffffffd8e4|int|struct tests:b|2
variable_access~!~145|15|main|0x7fffffffd8e8|int*|struct tests:p|0x5555555545a0|-1991643855
register~!~146|   x.p = &x.b;|rax|140737488345312
register~!~147|   x.p = &x.b;|rax|140737488345316
register~!~148|   x.p = &x.b;|rflags|518
variable_access~!~149|16|main|0x7fffffffd8e8|int*|struct tests:p|0x0|0x7fffffffd8e4
variable_access~!~149|16|main|0x7fffffffd8e8|int*|struct tests:p|0x7fffffffd8e4|2
register~!~150|   printf("a = %d, b = %d, *p = %d\n",x.a, x.b,*x.p);|ecx|2
register~!~151|   printf("a = %d, b = %d, *p = %d\n",x.a, x.b,*x.p);|edx|2
register~!~152|   printf("a = %d, b = %d, *p = %d\n",x.a, x.b,*x.p);|eax|1
register~!~153|   printf("a = %d, b = %d, *p = %d\n",x.a, x.b,*x.p);|esi|1
register~!~154|   printf("a = %d, b = %d, *p = %d\n",x.a, x.b,*x.p);|rdi|93824992233380
register~!~155|   printf("a = %d, b = %d, *p = %d\n",x.a, x.b,*x.p);|eax|0
register~!~156|   printf("a = %d, b = %d, *p = %d\n",x.a, x.b,*x.p);|rip|93824992232832
register~!~157|   printf("a = %d, b = %d, *p = %d\n",x.a, x.b,*x.p);|rsp|140737488345304
variable_access~!~158|17|main|0x7fffffffd8e8|int*|struct tests:p|0x7fffffffd8e4|2
register~!~159|null|rip|140737022168704
register~!~161|}|rsi|-451893060444788480
register~!~162|}|rsi|0
register~!~163|}|rflags|582
register~!~164|}|rbp|93824992233248
register~!~165|}|rsp|140737488345352
return~!~166
register~!~169|}|rip|140737021893527
register~!~170|}|rsp|140737488345360
function_invocation~!~172|0|`__do_global_dtors_aux|0x7fffffffd818
return_address~!~__do_global_dtors_aux|140737488345248|140737351932787
register~!~173|null|rip|93824992233065
register~!~174|null|rflags|514
register~!~176|null|rsp|140737488345104
register~!~177|null|rbp|140737488345104
register~!~178|null|rip|93824992233079
register~!~179|null|rdi|93824994332680
register~!~180|null|rip|93824992232848
register~!~181|null|rsp|140737488345096
register~!~182|null|rip|140737022031136
register~!~183|null|rip|93824992232912
function_invocation~!~185|0|`deregister_tm_clones|0x7fffffffd808
return_address~!~deregister_tm_clones|140737488345104|93824992233096
register~!~186|null|rdi|93824994332688
register~!~188|null|rsp|140737488345088
register~!~189|null|rax|93824994332688
register~!~190|null|rflags|582
register~!~191|null|rbp|140737488345088
register~!~193|null|rbp|140737488345104
register~!~194|null|rsp|140737488345096
return~!~195
register~!~197|null|rip|93824992233096
register~!~198|null|rsp|140737488345104
register~!~200|null|rbp|140737488345248
register~!~201|null|rsp|140737488345112
return~!~202
register~!~204|null|rip|140737351932787
register~!~205|null|rsp|140737488345120
function_invocation~!~207|0|`_fini|0x7fffffffd818
return_address~!~_fini|140737488345248|140737351932819
register~!~208|null|rsp|140737488345104
register~!~209|null|rflags|514
register~!~210|null|rsp|140737488345112
register~!~211|null|rflags|518
return~!~212
register~!~214|null|rip|140737351932819
register~!~215|null|rsp|140737488345120
